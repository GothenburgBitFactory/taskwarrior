New Features in Taskwarrior 2.6.0

  - The logic behind new-uuid verbosity option changed. New-uuid now overrides
    new-id if set and will cause Taskwarrior to display UUIDs instead of IDs
    for new tasks (machine friendly).
  - If ~/.taskrc is not found, Taskwarrior will look for its configuration in
    $XDG_CONFIG_HOME/task/taskrc (defaulting to ~/.config/task/taskrc). This
    allows users to setup their Taskwarrior to follow XDG standard without
    using config overrides.
  - Newer Unicode characters, such as emojis are correctly handled and displayed.
    Taskwarrior now supports all Unicode characters up to Unicode 11.
  - Datetime values until year 9999 are now supported.
    Duration values of up to 1 000 000 years are now supported.
  - 64-bit numeric values (up to 9,223,372,036,854,775,807) are now supported.
  - Later/someday named datetime values now resolve to 9999-12-30 (instead of
    2038-01-18).
  - Calendar now supports displaying due dates until year 9999.
  - Calendar now displays waiting tasks with due dates on the calendar.
  - A large portion of currently known parser-related issues was fixed.
  - The currently selected context is now applied for "task add" and "task log"
    commands. Section on contexts in the manpage was updated to describe this
    functionality.
  - The `task import` command can now accept annotations with missing entry
    values. Current time will be assumed.
  - The new 'by' filter attribute modifier compares using '<=' rather than '<'
    as 'before' uses.  This allows the last second of the day to match with
    'due.by:eod', which it would not otherwise.  It also works with
    whole units like days, e.g. 'add test due:2021-07-17' would not match
    'due.before:tomorrow' (on the 16th), but would match 'due.by:tomorrow'.
  - Waiting is now an entirely "virtual" concept, based on a task's
    'wait' property and the current time. Task is consiered "waiting" if its
    wait attribute is in the future.  TaskWarrior no longer explicitly
    "unwaits" a task (the wait attribute is not removed once its value is in
    the past), so the "unwait' verbosity token is no longer available.
    This allows for filtering for tasks that were waiting in the past
    intervals, but are not waiting anymore.

New Commands in Taskwarrior 2.6.0

  -

New Configuration Options in Taskwarrior 2.6.0

  - The context definitions for reporting commmands are now stored in
    "context.<name>.read". Context definitions for write commands are now
    supported using "context.<name>.write" configuration variable.
  - Each report (and the timesheet command) can explicitly opt-out from the
    currently active context by setting the report.<name>.context variable to 0
    (defaults to 1). Useful for defining universal reports that ignore
    currently set context, such as 'inbox' report for GTD methodology.
  - Multi-day holidays are now supported. Use holiday.<name>.start=<date> and
    holiday.<name>.end=<date> to specify a range-based holiday, such as a
    vacation.
  - Verbosity token 'default' was introduced in order to display information
    about default actions.


Newly Deprecated Features in Taskwarrior 2.6.0

  - The 'PARENT' and 'CHILD' virtual tags are replaced by 'TEMPLATE' and 'INSTANCE'.
  - The 'waiting' status is now deprecated. We recommend using +WAITING virtual tag
    or wait-attribute based filters, such as 'wait.before:eow' instead.

Fixed regressions in 2.6.0

  - The "end of <date>" named dates ('eod', 'eow', ...) were pointing to the
    first second of the next day, instead of last second of the referenced
    interval. This was a regression introduced in 2.5.2.
  - The rc.verbose:nothing configuration override was applied only if it were
    the first configuration override. Otherwise task would by default inform
    about the other overrides (see #2247). This was a regression introduced in
    2.5.2.
  - The attribute values of the form "<attribute name>-<arbitrary string>", for
    example "due-nextweek" or "scheduled-work" would fail to parse (see
    #1913). This was a regression introduced in 2.5.1.

Removed Features in 2.6.0

  -

Known Issues

  - https://github.com/GothenburgBitFactory/taskwarrior

Taskwarrior 2.6.0 has been built and tested on the following configurations:

  * Archlinux
  * OpenSUSE
  * macOS 10.15
  * Fedora (31, 32, 33, 34)
  * Ubuntu (18.04, 20.04, 21.04)
  * Debian (Stable, Testing)
  * CentOS (7, 8)

We expect Taskwarrior to work on other platforms as well.

---

While Taskwarrior has undergone testing, bugs are sure to remain.  If you
encounter a bug, please enter a new issue at:

  https://github.com/GothenburgBitFactory/taskwarrior
